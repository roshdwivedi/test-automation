name: CI - Web Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-playwright playwright
        
    - name: Install Playwright browsers
      run: |
        python -m playwright install --with-deps ${{ matrix.browser }}
        
    - name: Run smoke tests
      env:
        PYTHONPATH: .
      run: |
        python -m pytest tests/ -m smoke -v --tb=short --browser-type=${{ matrix.browser }}
        
    - name: Run all tests
      env:
        PYTHONPATH: .
      run: |
        python -m pytest tests/ -v --tb=short --html=reports/report.html --self-contained-html --junit-xml=reports/junit.xml --browser-type=${{ matrix.browser }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}-${{ matrix.browser }}
        path: |
          reports/
          
    - name: Upload JUnit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: junit-results-${{ matrix.python-version }}-${{ matrix.browser }}
        path: reports/junit.xml

  publish-results:
    runs-on: ubuntu-22.04
    needs: test
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: "**/junit.xml"